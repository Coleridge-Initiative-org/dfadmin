# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-11-21 11:45
from __future__ import unicode_literals

from django.db import migrations


class Migration(migrations.Migration):
    """
    Base mimetypes from https://en.wikipedia.org/wiki/Media_type.
    """
    dependencies = [
        ('data_facility_metadata', '0002_auto_20181128_1632'),
    ]

    def create_base_mimetypes(apps, schema_editor):
        '''
        We can't import the Post model directly as it may be a newer
        version than this migration expects. We use the historical version.
        '''
        FileFormat = apps.get_model('data_facility_metadata', 'FileFormat')
        mimetypes = ['application / javascript',
                     'application / json',
                     'application / x - www - form - urlencoded',
                     'application / xml',
                     'application / zip',
                     'application / pdf',
                     'application / sql',
                     'application / graphql',
                     'application / ld + json',
                     'application / msword(.doc)',
                     'application / vnd.openxmlformats - officedocument.wordprocessingml.document(.docx)',
                     'application / vnd.ms - excel(.xls)',
                     'application / vnd.openxmlformats - officedocument.spreadsheetml.sheet(.xlsx)',
                     'application / vnd.ms - powerpoint(.ppt)',
                     'application / vnd.openxmlformats - officedocument.presentationml.presentation(.pptx)',
                     'application / vnd.oasis.opendocument.text(.odt)',
                     'audio / mpeg',
                     'audio / ogg',
                     'multipart / form - data',
                     'text / css',
                     'text / html',
                     'text / xml',
                     'text / csv',
                     'text / plain',
                     'image / png',
                     'image / jpeg',
                     'image / gif',
                     ]
        for mt in mimetypes:
            name = mt.split(' / ')[1]
            FileFormat(name=name, mimetype=mt).save()

    operations = [migrations.RunPython(create_base_mimetypes),
                  ]
