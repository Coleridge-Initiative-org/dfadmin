# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-11-27 18:31
from __future__ import unicode_literals

from django.db import migrations
HIVE = 'Hive'


class Migration(migrations.Migration):
    """
    Based on:
        https://cwiki.apache.org/confluence/display/Hive/LanguageManual+Types
        https://cwiki.apache.org/confluence/display/Hive/HCatalog+InputOutput#HCatalogInputOutput-HCatRecord

    """

    def create_hive_storage(apps, schema_editor):
        StorageType = apps.get_model('data_facility_metadata', 'StorageType')
        hive = StorageType(name=HIVE)
        hive.save()

    def populate_hive_types(apps, schema_editor):
        data_types = [
            # Numeric
            {'category': 'Numeric', 'name': 'TINYINT', 'description': '(1-byte signed integer, from -128 to 127)'},
            {'category': 'Numeric', 'name': 'SMALLINT',
             'description': '(2-byte signed integer, from -32,768 to 32,767)'},
            {'category': 'Numeric', 'name': 'INT/INTEGER',
             'description': '(4-byte signed integer, from -2,147,483,648 to 2,147,483,647)'},
            {'category': 'Numeric', 'name': 'BIGINT',
             'description': '(8-byte signed integer, from -9,223,372,036,854,775,808 to 9,223,372,036,854,775,807)'},
            {'category': 'Numeric', 'name': 'FLOAT',
             'description': '(4-byte single precision floating point number)'},
            {'category': 'Numeric', 'name': 'DOUBLE', 'description': '(8-byte double precision floating point number)'},
            {'category': 'Numeric', 'name': 'DOUBLE PRECISION',
             'description': '(alias for DOUBLE, only available starting with Hive 2.2.0)'},
            {'category': 'Numeric', 'name': 'DECIMAL',
             'description': 'Introduced in Hive 0.11.0 with a precision of 38 digits.'
                            'Hive 0.13.0 introduced user-definable precision and scale'},
            {'category': 'Numeric', 'name': 'NUMERIC', 'description': '(same as DECIMAL, starting with Hive 3.0.0)'},
            # Date/Time
            {'category': 'Date/Time', 'name': 'TIMESTAMP',
             'description': '(Note: Only available starting with Hive 0.8.0)'},
            {'category': 'Date/Time', 'name': 'DATE',
             'description': '(Note: Only available starting with Hive 0.12.0)'},
            {'category': 'Date/Time', 'name': 'INTERVAL',
             'description': '(Note: Only available starting with Hive 1.2.0)'},
            # String
            {'category': 'String', 'name': 'VARCHAR',
             'description': '(Note: Only available starting with Hive 0.12.0)'},
            {'category': 'String', 'name': 'CHAR', 'description': '(Note: Only available starting with Hive 0.13.0)'},
            # Misc
            {'category': 'Misc', 'name': 'BOOLEAN', 'description': ''},
            {'category': 'Misc', 'name': 'BINARY', 'description': '(Note: Only available starting with Hive 0.8.0)'},
        ]

        StorageType = apps.get_model('data_facility_metadata', 'StorageType')
        hive = StorageType.objects.get(name=HIVE)

        DataType = apps.get_model('data_facility_metadata', 'DataType')

        for dt in data_types:
            DataType(name=dt['name'], description=dt['description'], category=dt['category'],
                     data_store=hive
                     ).save()

    dependencies = [
        ('data_facility_metadata', '0003_base_mimetypes'),
    ]

    operations = [
        migrations.RunPython(create_hive_storage),
        migrations.RunPython(populate_hive_types),
                  ]
